let currentDate = new Date();
let events = JSON.parse(localStorage.getItem('quailEvents')) || {};
let editingEventDate = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
function initCalendar() {
    populateYearSelect();
    populateMonthSelect();
    renderCalendar();
    displayEvents();
    
    document.getElementById('prevMonth').addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() - 1);
        updateSelectors();
        renderCalendar();
    });
    
    document.getElementById('nextMonth').addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() + 1);
        updateSelectors();
        renderCalendar();
    });
    
    document.getElementById('yearSelect').addEventListener('change', (e) => {
        currentDate.setFullYear(parseInt(e.target.value));
        renderCalendar();
    });
    
    document.getElementById('monthSelect').addEventListener('change', (e) => {
        currentDate.setMonth(parseInt(e.target.value));
        renderCalendar();
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö
    ['cell1Birds', 'cell1Eggs', 'cell2Birds', 'cell2Eggs', 'cell3Birds', 'cell3Eggs'].forEach(id => {
        document.getElementById(id).addEventListener('input', updateTotals);
    });
}

// –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –≥–æ–¥–æ–≤
function populateYearSelect() {
    const yearSelect = document.getElementById('yearSelect');
    const currentYear = new Date().getFullYear();
    
    for (let year = currentYear - 10; year <= currentYear + 10; year++) {
        const option = document.createElement('option');
        option.value = year;
        option.textContent = year;
        yearSelect.appendChild(option);
    }
    yearSelect.value = currentYear;
}

// –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –º–µ—Å—è—Ü–µ–≤
function populateMonthSelect() {
    const monthSelect = document.getElementById('monthSelect');
    const months = [
        '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
        '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ];
    
    months.forEach((month, index) => {
        const option = document.createElement('option');
        option.value = index;
        option.textContent = month;
        monthSelect.appendChild(option);
    });
    monthSelect.value = currentDate.getMonth();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function updateSelectors() {
    document.getElementById('yearSelect').value = currentDate.getFullYear();
    document.getElementById('monthSelect').value = currentDate.getMonth();
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
function renderCalendar() {
    const monthNames = [
        '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
        '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ];
    
    document.getElementById('currentMonth').textContent = 
        `${monthNames[currentDate.getMonth()]} ${currentDate.getFullYear()}`;
    
    const calendarDays = document.getElementById('calendarDays');
    calendarDays.innerHTML = '';
    
    const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
    const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
    const today = new Date();
    
    // –ü—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è –¥–Ω–µ–π –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    const firstDayOfWeek = firstDay.getDay() === 0 ? 6 : firstDay.getDay() - 1;
    for (let i = 0; i < firstDayOfWeek; i++) {
        const emptyDay = document.createElement('div');
        emptyDay.className = 'day other-month';
        calendarDays.appendChild(emptyDay);
    }
    
    // –î–Ω–∏ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    for (let day = 1; day <= lastDay.getDate(); day++) {
        const dayElement = document.createElement('div');
        dayElement.className = 'day';
        dayElement.innerHTML = `<div>${day}</div>`;
        
        const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);
        const dateKey = formatDate(date);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
        if (date.toDateString() === today.toDateString()) {
            dayElement.classList.add('today');
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
        if (events[dateKey]) {
            const event = events[dateKey];
            let markersHtml = '';
            
            if (event.cell1 && (event.cell1.birds > 0 || event.cell1.eggs > 0)) {
                markersHtml += `<div class="day-marker cell1-marker">–ö1: üêî${event.cell1.birds} ü•ö${event.cell1.eggs}</div>`;
            }
            if (event.cell2 && (event.cell2.birds > 0 || event.cell2.eggs > 0)) {
                markersHtml += `<div class="day-marker cell2-marker">–ö2: üêî${event.cell2.birds} ü•ö${event.cell2.eggs}</div>`;
            }
            if (event.cell3 && (event.cell3.birds > 0 || event.cell3.eggs > 0)) {
                markersHtml += `<div class="day-marker cell3-marker">–ö3: üêî${event.cell3.birds} ü•ö${event.cell3.eggs}</div>`;
            }
            
            dayElement.innerHTML += markersHtml;
        }
        
        dayElement.addEventListener('click', () => selectDate(date));
        calendarDays.appendChild(dayElement);
    }
}

// –í—ã–±–æ—Ä –¥–∞—Ç—ã
function selectDate(date) {
    const dateKey = formatDate(date);
    document.getElementById('selectedDateDisplay').textContent = formatDisplayDate(dateKey);
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (events[dateKey]) {
        const event = events[dateKey];
        document.getElementById('cell1Birds').value = event.cell1?.birds || '';
        document.getElementById('cell1Eggs').value = event.cell1?.eggs || '';
        document.getElementById('cell2Birds').value = event.cell2?.birds || '';
        document.getElementById('cell2Eggs').value = event.cell2?.eggs || '';
        document.getElementById('cell3Birds').value = event.cell3?.birds || '';
        document.getElementById('cell3Eggs').value = event.cell3?.eggs || '';
        
        editingEventDate = dateKey;
        document.getElementById('deleteBtn').style.display = 'block';
    } else {
        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
        clearForm();
        editingEventDate = null;
        document.getElementById('deleteBtn').style.display = 'none';
    }
    
    updateTotals();
    showEventForm();
}

// –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
function clearForm() {
    document.getElementById('cell1Birds').value = '';
    document.getElementById('cell1Eggs').value = '';
    document.getElementById('cell2Birds').value = '';
    document.getElementById('cell2Eggs').value = '';
    document.getElementById('cell3Birds').value = '';
    document.getElementById('cell3Eggs').value = '';
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É —Å–æ–±—ã—Ç–∏—è
function showEventForm() {
    document.getElementById('eventModal').style.display = 'flex';
}

// –ó–∞–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É —Å–æ–±—ã—Ç–∏—è
function closeEventModal() {
    document.getElementById('eventModal').style.display = 'none';
    editingEventDate = null;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤
function updateTotals() {
    const cell1Birds = parseInt(document.getElementById('cell1Birds').value) || 0;
    const cell1Eggs = parseInt(document.getElementById('cell1Eggs').value) || 0;
    const cell2Birds = parseInt(document.getElementById('cell2Birds').value) || 0;
    const cell2Eggs = parseInt(document.getElementById('cell2Eggs').value) || 0;
    const cell3Birds = parseInt(document.getElementById('cell3Birds').value) || 0;
    const cell3Eggs = parseInt(document.getElementById('cell3Eggs').value) || 0;
    
    const totalBirds = cell1Birds + cell2Birds + cell3Birds;
    const totalEggs = cell1Eggs + cell2Eggs + cell3Eggs;
    
    document.getElementById('totalBirds').textContent = totalBirds;
    document.getElementById('totalEggs').textContent = totalEggs;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
function saveEvent() {
    const cell1Birds = parseInt(document.getElementById('cell1Birds').value) || 0;
    const cell1Eggs = parseInt(document.getElementById('cell1Eggs').value) || 0;
    const cell2Birds = parseInt(document.getElementById('cell2Birds').value) || 0;
    const cell2Eggs = parseInt(document.getElementById('cell2Eggs').value) || 0;
    const cell3Birds = parseInt(document.getElementById('cell3Birds').value) || 0;
    const cell3Eggs = parseInt(document.getElementById('cell3Eggs').value) || 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ
    if (cell1Birds === 0 && cell1Eggs === 0 && 
        cell2Birds === 0 && cell2Eggs === 0 && 
        cell3Birds === 0 && cell3Eggs === 0) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ö–æ—Ç—è –±—ã –¥–ª—è –æ–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏');
        return;
    }
    
    const dateKey = editingEventDate || formatDateFromForm();
    
    events[dateKey] = {
        cell1: { birds: cell1Birds, eggs: cell1Eggs },
        cell2: { birds: cell2Birds, eggs: cell2Eggs },
        cell3: { birds: cell3Birds, eggs: cell3Eggs },
        date: dateKey
    };
    
    localStorage.setItem('quailEvents', JSON.stringify(events));
    closeEventModal();
    renderCalendar();
    displayEvents();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏–∑ —Ñ–æ—Ä–º—ã
function formatDateFromForm() {
    const day = document.getElementById('selectedDateDisplay').textContent.split(' ')[0];
    const months = {
        '—è–Ω–≤–∞—Ä—è': 0, '—Ñ–µ–≤—Ä–∞–ª—è': 1, '–º–∞—Ä—Ç–∞': 2, '–∞–ø—Ä–µ–ª—è': 3, '–º–∞—è': 4, '–∏—é–Ω—è': 5,
        '–∏—é–ª—è': 6, '–∞–≤–≥—É—Å—Ç–∞': 7, '—Å–µ–Ω—Ç—è–±—Ä—è': 8, '–æ–∫—Ç—è–±—Ä—è': 9, '–Ω–æ—è–±—Ä—è': 10, '–¥–µ–∫–∞–±—Ä—è': 11
    };
    
    const dateText = document.getElementById('selectedDateDisplay').textContent;
    const [dayStr, monthStr, yearStr] = dateText.split(' ');
    const month = months[monthStr];
    const year = parseInt(yearStr);
    
    const date = new Date(year, month, parseInt(dayStr));
    return formatDate(date);
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
function deleteEvent() {
    if (editingEventDate && confirm('–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –∑–∞ —ç—Ç—É –¥–∞—Ç—É?')) {
        delete events[editingEventDate];
        localStorage.setItem('quailEvents', JSON.stringify(events));
        closeEventModal();
        renderCalendar();
        displayEvents();
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π
function displayEvents() {
    const eventsContainer = document.getElementById('eventsContainer');
    eventsContainer.innerHTML = '';
    
    const sortedDates = Object.keys(events).sort().reverse(); // –ù–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É
    
    if (sortedDates.length === 0) {
        eventsContainer.innerHTML = '<p style="text-align: center; color: #666; padding: 20px;">–ó–∞–ø–∏—Å–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</p>';
        return;
    }
    
    sortedDates.forEach(dateKey => {
        const event = events[dateKey];
        const eventItem = document.createElement('div');
        eventItem.className = 'event-item';
        
        let cellsHtml = '';
        let totalBirds = 0;
        let totalEggs = 0;
        
        if (event.cell1 && (event.cell1.birds > 0 || event.cell1.eggs > 0)) {
            cellsHtml += `
                <div class="cell-display cell1">
                    <h4>ü•ö –ö–ª–µ—Ç–∫–∞ 1</h4>
                    <div class="cell-stats">
                        <div>–ü–µ—Ä–µ–ø–µ–ª–∫–∏: ${event.cell1.birds}</div>
                        <div>–Ø–π—Ü–∞: ${event.cell1.eggs}</div>
                    </div>
                </div>
            `;
            totalBirds += event.cell1.birds;
            totalEggs += event.cell1.eggs;
        }
        
        if (event.cell2 && (event.cell2.birds > 0 || event.cell2.eggs > 0)) {
            cellsHtml += `
                <div class="cell-display cell2">
                    <h4>ü•ö –ö–ª–µ—Ç–∫–∞ 2</h4>
                    <div class="cell-stats">
                        <div>–ü–µ—Ä–µ–ø–µ–ª–∫–∏: ${event.cell2.birds}</div>
                        <div>–Ø–π—Ü–∞: ${event.cell2.eggs}</div>
                    </div>
                </div>
            `;
            totalBirds += event.cell2.birds;
            totalEggs += event.cell2.eggs;
        }
        
        if (event.cell3 && (event.cell3.birds > 0 || event.cell3.eggs > 0)) {
            cellsHtml += `
                <div class="cell-display cell3">
                    <h4>ü•ö –ö–ª–µ—Ç–∫–∞ 3</h4>
                    <div class="cell-stats">
                        <div>–ü–µ—Ä–µ–ø–µ–ª–∫–∏: ${event.cell3.birds}</div>
                        <div>–Ø–π—Ü–∞: ${event.cell3.eggs}</div>
                    </div>
                </div>
            `;
            totalBirds += event.cell3.birds;
            totalEggs += event.cell3.eggs;
        }
        
        eventItem.innerHTML = `
            <div class="event-date">${formatDisplayDate(dateKey)}</div>
            <div class="cells-display">
                ${cellsHtml}
            </div>
            <div class="event-totals">
                –í—Å–µ–≥–æ: üêî ${totalBirds} –ø–µ—Ä–µ–ø–µ–ª–æ–∫, ü•ö ${totalEggs} —è–∏—Ü
            </div>
            <div class="event-actions">
                <button class="edit-btn" onclick="editEvent('${dateKey}')">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                <button class="delete-event-btn" onclick="deleteEventFromList('${dateKey}')">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
            </div>
        `;
        eventsContainer.appendChild(eventItem);
    });
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
function editEvent(dateKey) {
    const event = events[dateKey];
    const date = new Date(dateKey);
    
    document.getElementById('selectedDateDisplay').textContent = formatDisplayDate(dateKey);
    document.getElementById('cell1Birds').value = event.cell1?.birds || '';
    document.getElementById('cell1Eggs').value = event.cell1?.eggs || '';
    document.getElementById('cell2Birds').value = event.cell2?.birds || '';
    document.getElementById('cell2Eggs').value = event.cell2?.eggs || '';
    document.getElementById('cell3Birds').value = event.cell3?.birds || '';
    document.getElementById('cell3Eggs').value = event.cell3?.eggs || '';
    
    editingEventDate = dateKey;
    document.getElementById('deleteBtn').style.display = 'block';
    updateTotals();
    showEventForm();
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞
function deleteEventFromList(dateKey) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?')) {
        delete events[dateKey];
        localStorage.setItem('quailEvents', JSON.stringify(events));
        renderCalendar();
        displayEvents();
    }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç–µ
function goToToday() {
    currentDate = new Date();
    updateSelectors();
    renderCalendar();
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –∫–ª—é—á–∞
function formatDate(date) {
    return date.toISOString().split('T')[0];
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function formatDisplayDate(dateString) {
    const date = new Date(dateString);
    const months = [
        '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
        '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
    ];
    
    return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()} –≥–æ–¥–∞`;
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π (–∑–∞–≥–ª—É—à–∫–∞)
function filterEvents() {
    displayEvents();
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', (e) => {
    const modal = document.getElementById('eventModal');
    if (e.target === modal) {
        closeEventModal();
    }
});

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initCalendar);